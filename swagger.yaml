openapi: "3.0.0"
info:
  version: "1.0.0"
  title: "Task Pro Doc API"
  description: "API for managing tasks and todo lists"
  contact:
    url: https://github.com/SnehaShisNasty
servers:
  - url: https://protask-backend-qjoh.onrender.com
    description: Production server
  - url: http://localhost:3000
    description: Development server

tags:
  - name: Authentication
    description: "All methods of authentication"
  - name: User
    description: "All methods of user "
  - name: Board
    description: "All methods of board"
  - name: Task
    description: "All methods of task"
  - name: Colum
    description: "All methods of colum"
paths:
  /auth/register:
    post:
      summary: Creates a user
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserRegister"
      responses:
        "201":
          description: Created
        "400":
          description: Bad request
        "409":
          description: Conflict. Email alreasy in use
  /auth/login:
    post:
      summary: Login a user.
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserLogin"
      responses:
        "200":
          description: Success
          content:
            application/json;charset=UTF-8:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY2MzJhNzE2YmU3MDdlMmFmNjBjMzA2MyIsImlhdCI6MTcxNDU5NTYzMiwiZXhwIjoxNzE0Njc4NDMyfQ.gV4vdobUN8-qyLEQzK45BbTY75It4NEWVyzW1YZii1s
                  message:
                    type: object
                    properties:
                      name:
                        type: string
                        example: "test@gmail.com"
                      email:
                        type: string
                        example: "Password1"
                      avatar:
                        type: string
                        example: "//www.gravatar.com/avatar/f43bb93d61d8fb8d06fc2c16b847ce06?s=250"
                      theme:
                        type: string
                        example: light

        "400":
          description: Bad request
        "401":
          description: Email or password invalid
  /auth/current:
    get:
      summary: "Get current user's data"
      description: "Endpoint to get current user's data."
      tags:
        - Authentication
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Success
          content:
            application/json;charset=UTF-8:
              schema:
                type: object
                properties:
                  message:
                    type: object
                    properties:
                      name:
                        type: string
                        example: "test@gmail.com"
                      email:
                        type: string
                        example: "Password1"
                      avatar:
                        type: string
                        example: "//www.gravatar.com/avatar/f43bb93d61d8fb8d06fc2c16b847ce06?s=250"
        "401":
          description: Authorization header not found
        "403":
          description: Forbidden
  /auth/logout:
    post:
      summary: "Logout a user"
      description: "Endpoint to log out a user."
      tags:
        - Authentication
      security:
        - bearerAuth: []
      responses:
        "204":
          description: Success
        "401":
          description: Authorization header not found
        "403":
          description: Forbidden

  /users/edit/theme:
    patch:
      summary: Edit your personal theme
      tags:
        - User
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserTheme"
      responses:
        "201":
          description: Changed
        "400":
          description: Invalid data
        "401":
          description: Authorization header not found
        "403":
          description: Forbidden
  /users/need-help:
    patch:
      summary: Edit your personal theme
      tags:
        - User
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserNeedHelp"
      responses:
        "201":
          description: Success
        "400":
          description: Invalid data
        "401":
          description: Authorization header not found
        "403":
          description: Forbidden
  /users/edit/profile:
    patch:
      summary: Edit your personal data
      tags:
        - User
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: "name"
                email:
                  type: string
                  format: email
                  example: "test@gmail.com"
                password:
                  type: string
                  example: "Password1"
                profileImage:
                  type: string
                  format: binary
      responses:
        "201":
          description: Success
        "400":
          description: Invalid data
        "401":
          description: Authorization header not found
        "403":
          description: Forbidden

  /boards:
    get:
      summary: Get all boards
      tags:
        - Board
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/BoardShema"
        "401":
          description: Authorization header not found
        "403":
          description: Forbidden
  /boards/background-icons:
    get:
      summary: Get all background-icons for board
      tags:
        - Board
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/BackgroundIcons"
        "401":
          description: Authorization header not found
        "403":
          description: Forbidden
  /boards/:id:
    get:
      summary: Get one board by id
      tags:
        - Board
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BoardShema"
        "401":
          description: Authorization header not found
        "404":
          description: User with id not found
        "403":
          description: Forbidden
    put:
      summary: Change one board by id
      tags:
        - Board
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateAndUpdateBoardSchema"
        "401":
          description: Authorization header not found
        "404":
          description: User with id not found
        "403":
          description: Forbidden
    delete:
      summary: delete one board by id
      tags:
        - Board
      security:
        - bearerAuth: []
      responses:
        "203":
          description: Board with id deleted sucssesfull
        "401":
          description: Authorization header not found
        "404":
          description: User with id not found
        "403":
          description: Forbidden
  /boards/create-board:
    post:
      summary: Get all background-icons for board
      tags:
        - Board
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateAndUpdateBoardSchema"

      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BoardShema"
        "401":
          description: Authorization header not found
        "404":
          description: User with id not found
        "403":
          description: Forbidden

  /boards/current-column/:boardId:
    get:
      summary: Get all tasks by id board
      tags:
        - Task
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TaskSchema"
        "401":
          description: Authorization header not found
        "404":
          description: User with id not found
        "403":
          description: Forbidden
  /boards/current-column/:boardId/:columnId:
    post:
      summary: Create task by id board
      tags:
        - Task
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TaskSchema"
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TaskSchema"
        "401":
          description: Authorization header not found
        "404":
          description: User with id not found
        "403":
          description: Forbidden
  /boards/current-column/:columnId/:taskId:
    put:
      summary: Update task by id board
      tags:
        - Task
      security:
        - bearerAuth: []
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TaskSchema"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TaskSchema"
        "401":
          description: Authorization header not found
        "404":
          description: User with id not found
        "403":
          description: Forbidden
    delete:
      summary: Delete task by id board
      tags:
        - Task
      security:
        - bearerAuth: []
      responses:
        "203":
          description: Task with id  deleted sucssesfull
        "401":
          description: Authorization header not found
        "404":
          description: User with id not found
        "403":
          description: Forbidden

  /boards/current/:boardId:
    get:
      summary: Get all collums by id board
      tags:
        - Colum
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ColumnSchema"

        "401":
          description: Authorization header not found
        "404":
          description: User with id not found
        "403":
          description: Forbidden
    post:
      summary: Create one collum
      tags:
        - Colum
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ColumCreateAndUpdateSchema"
      responses:
        "200":
          description: Success
        "401":
          description: Authorization header not found
        "404":
          description: User with id not found
        "403":
          description: Forbidden
    put:
      summary: Switch all colum by id board
      tags:
        - Colum
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SwitchColumnShema"
      responses:
        "203":
          description: The task has been successfully moved to a new column

        "401":
          description: Authorization header not found
        "404":
          description: User with id not found
        "403":
          description: Forbidden
  /boards/current/:boardId/:columnId:
    get:
      summary: Get all collum by id board
      tags:
        - Colum
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ColumnSchema"

        "401":
          description: Authorization header not found
        "404":
          description: User with id not found
        "403":
          description: Forbidden
    put:
      summary: Update collum by id collum
      tags:
        - Colum
      security:
        - bearerAuth: []
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ColumCreateAndUpdateSchema"
      responses:
        "201":
          description: Success

        "401":
          description: Authorization header not found
        "404":
          description: User with id not found
        "403":
          description: Forbidden
    delete:
      summary: Delete collum by id collum
      tags:
        - Colum
      security:
        - bearerAuth: []
      responses:
        "203":
          description: column with id  deleted sucssesfull

        "401":
          description: Authorization header not found
        "404":
          description: User with id not found
        "403":
          description: Forbidden

components:
  schemas:
    UserRegister:
      type: object
      properties:
        name:
          type: string
          example: "name"
        email:
          type: string
          format: email
          example: "test@gmail.com"
        password:
          type: string
          example: "Password1"
    UserLogin:
      type: object
      properties:
        email:
          type: string
          format: email
          example: "test@gmail.com"
        password:
          type: string
          example: "Password1"
    UserTheme:
      type: object
      properties:
        theme:
          type: string
          enum: ["light", "dark", "violet"]
          example: "light"
    UserNeedHelp:
      type: object
      properties:
        description:
          type: string
          example: "User comment"
    EditProfileShema:
      type: object
      properties:
        name:
          type: string
          example: "name"
        email:
          type: string
          format: email
          example: "test@gmail.com"
        password:
          type: string
          example: "Password1"
    BoardShema:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        icon:
          type: string
        background:
          type: string
        owner:
          type: object
          properties:
            _id:
              type: string
            name:
              type: string
        columns:
          type: array
          items:
            type: object
    BackgroundIcons:
      type: object
      properties:
        color:
          type: string
          example: "https://res.cloudinary.com/dqk2vytp0/image/upload/v1715520688/backgrounds/yacht.png"
    CreateAndUpdateBoardSchema:
      type: object
      properties:
        title:
          type: string
        icon:
          type: string
        background:
          type: string
          enum:
            [
              "none-background",
              "magnolia",
              "starry-sky",
              "sakura",
              "half-moon",
              "palm-leaves",
              "clouds",
              "rocky-beach",
              "violet-ball",
              "full-moon",
              "yacht",
              "baloon",
              "mountains",
              "sea",
              "baloon-sky",
              "night-trailer",
            ]
    TaskSchema:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        color:
          type: string
        deadline:
          type: string
        priority:
          type: string
    ColumnSchema:
      type: object
      properties:
        boardId:
          type: string
        title:
          type: string
        _id:
          type: string
        tasks:
          type: array
          items:
            type: object
        priority:
          type: string
    ColumCreateAndUpdateSchema:
      type: object
      properties:
        title:
          type: string
    SwitchColumnShema:
      type: object
      properties:
        taskId:
          type: string
        newColumnId:
          type: string
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
